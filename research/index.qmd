---
title: "Research"
toc: true
page-layout: full
title-block-style: default
title-block-banner: false
bibliography: ../bibliography/bibtex/bibliography_kapfhammer.bib
---

```{python}
from rich.console import Console

console = Console()
console.print(
    f":rocket: Have fun exploring my research in fields like testing and debugging!"
)
```

## Overview

As an experimental computer scientist, the goal of my research is to design,
implement, and evaluate techniques and tools that support the creation of
useful, dependable, and efficient software. My research addresses the challenges
in fields such as software engineering, software testing, and computer systems.
I conduct this research with undergraduates at [Allegheny
College](http://www.allegheny.edu), graduate students and professors at several
universities (e.g., University of Sheffield and the University of Passau), and
colleagues in industry. Keep reading for more details!

## Details

My research is empirical because it involves the application of the scientific
method to formulate problem statements, carry out experiments, take
observations, statistically analyze and visualize the data sets, and draw
conclusions based on the results. Each research project focuses on the
development and evaluation of [software](/software/) artifacts that can be used
in both empirical studies and real-world practice by undergraduate and graduate
students, software engineers, and computer scientists in both academia and
industry.

In addition to supporting my professional [service](/service/), my research
results in award-winning and frequently cited research
[papers](/research/papers/), oft-complimented
[presentations](/research/presentations/), and useful free and open-source
[software](/software/). My research focuses on software engineering and software
testing, examples of which are described in these summaries that reference key
papers.

<div id="flaky-tests">

### Flaky Tests

Since flaky tests can pass or fail without any changes to the test code or the
code under test, they are an unreliable indicator of software correctness and a
major problem for many software developers. To address this challenge, my
collaborators and I have developed an automated method that uses machine
learning to predict which tests are most likely to be flaky [@Parry2022a] [{{<
iconify fa6-solid book-open >}}](/research/papers/parry2022a/index.qmd). Along
with proposing a methodology for automatically determining which tests have
latent flakiness [@Parry2020] [{{< iconify fa6-solid
book-open>}}](/research/papers/parry2020/index.qmd), my colleagues and I also
published a survey of the literature relevant to flaky test research
[@Parry2022] [{{< iconify fa6-solid
book-open>}}](/research/papers/parry2022/index.qmd), and a multi-source
investigation into how developers experience the impacts and causes of flaky
tests [@Parry2022b] [{{< iconify fa6-solid
book-open>}}](/research/papers/parry2022b/index.qmd).

</div>

<div id="database-testing">

### Database Testing

Given the importance of verifying that a database application
operates correctly, my PhD dissertation
[@Kapfhammer2007d] [{{< iconify fa6-solid book-open >}}](/research/papers/kapfhammer2007d/index.qmd)
presented and evaluated an approach for testing this type of
software; a notable paper derived from my dissertation is
[@Kapfhammer2003] [{{< iconify fa6-solid book-open >}}](/research/papers/kapfhammer2003/index.qmd).
Since the relational schema preserves the correctness of the database's state,
my research has also focused on testing this complex artifact, with
[@McMinn2015] [{{< iconify fa6-solid book-open >}}](/research/papers/mcminn2015/index.qmd)
and
[@McMinn2019] [{{< iconify fa6-solid book-open >}}](/research/papers/mcminn2019/index.qmd)
being examples of papers.
Recent papers such as
[@Alsharif2020] [{{< iconify fa6-solid book-open >}}](/research/papers/alsharif2020/index.qmd)
and
[@Alsharif2020a] [{{< iconify fa6-solid book-open >}}](/research/papers/alsharif2020a/index.qmd)
present and study techniques for improving the efficiency and effectiveness of
regression testing for relational database schemas.

</div>

<div id="web-testing">

### Web Testing

In response to the prevalence and complexity of mobile-ready web sites, my
research has developed automated tools for checking the pages in these sites.
Some examples of papers describing methods for automatically detecting defects
in web pages include [@Walsh2017] [{{< iconify fa6-solid
book-open>}}](/research/papers/walsh2017/index.qmd) and [@Walsh2017a] [{{<
iconify fa6-solid book-open>}}](/research/papers/walsh2017a/index.qmd). The
automated approach introduced in [@Althomali2019] [{{< iconify fa6-solid
book-open>}}](/research/papers/althomali2019/index.qmd) can visually confirm and
classify the reported responsive layout failures in a web page. The method
described in [@Walsh2020] [{{< iconify fa6-solid
book-open>}}](/research/papers/walsh2020/index.qmd) can automatically identify
potential regressions from the correct responsive layout of a web page. Finally,
recent work introduced a method to automatically repair a layout failure in a
responsive web page [@Althomali2022] [{{< iconify fa6-solid
book-open>}}](/research/papers/althomali2022/index.qmd).

</div>

<div id="mutation-testing">

### Mutation Testing

Given the challenges associated with accurately judging the quality of a test
suite, my research has designed efficient and useful ways to perform test
assessment through mutation analysis. Presenting and evaluating automated
techniques that efficiently insert synthetic faults into both real-world Java
programs and relational database schemas, some examples of papers include
[@Just2012b] [{{< iconify fa6-solid book-open >}}](/research/papers/just2012b/index.qmd), [@Wright2014] [{{< iconify
fa6-solid book-open >}}](/research/papers/wright2014/index.qmd), and
[@McMinn2019] [{{< iconify fa6-solid book-open >}}](/research/papers/mcminn2019/index.qmd).

</div>

<div id="regression-testing">

### Regression Testing

Since software is often incrementally developed, my
research on regression testing has created research automated ways to
efficiently and effectively run test suites for complex programs.
Some examples
of papers that present and evaluate regression testing techniques include
[@Walcott2006] [{{< iconify fa6-solid book-open >}}](/research/papers/walcott2006/index.qmd),
[@Lin2014] [{{< iconify fa6-solid book-open >}}](/research/papers/lin2014/index.qmd),
and
[@Lin2017] [{{< iconify fa6-solid book-open >}}](/research/papers/lin2017/index.qmd).
Leading the way in the realistic assessment of regression testing, papers such as
[@Paterson2018] [{{< iconify fa6-solid book-open >}}](/research/papers/paterson2018/index.qmd)
and
[@Paterson2019] [{{< iconify fa6-solid book-open >}}](/research/papers/paterson2019/index.qmd),
show how to conduct rigorous regression testing experiments with real program faults.

</div>

<div id="search-based-testing">

### Search-Based Testing

Using a fitness function as a guide to a solution,
    search-based methods have shown promise in supporting many software
    engineering tasks. My work has focused on creating frameworks that
support the development of search-based tools, with
[@McMinn2016b] [{{< iconify fa6-solid book-open >}}](/research/papers/mcminn2016b/index.qmd)
being an example.
Other papers like
[@Conrad2010a] [{{< iconify fa6-solid book-open >}}](/research/papers/conrad2010a/index.qmd)
and
[@Kukunas2010a] [{{< iconify fa6-solid book-open >}}](/research/papers/kukunas2010a/index.qmd)
describe search-based solutions to key software engineering challenges. Recent
papers like
[@Alsharif2019] [{{< iconify fa6-solid book-open >}}](/research/papers/alsharif2019/index.qmd)
present ways to involve humans when studying the usefulness of tests that were
generated by search-based techniques.

</div>

<div id="performance-evaluation">

### Performance Evaluation

Given the importance of equipping software engineers with the
    insights and tools they need to create efficient software, my work has
    developed tools that automatically assess program performance.
Focusing on the empirical evaluation of real-world software components like
databases, relevant papers include
[@Jones2011] [{{< iconify fa6-solid book-open >}}](/research/papers/jones2011/index.qmd),
[@Burdette2012] [{{< iconify fa6-solid book-open >}}](/research/papers/burdette2012/index.qmd),
and
[@Kinneer2015] [{{< iconify fa6-solid book-open >}}](/research/papers/kinneer2015/index.qmd).
Papers such as
[@Kotelyanskii2014a] [{{< iconify fa6-solid book-open >}}](/research/papers/kotelyanskii2014a/index.qmd)
highlight how my research has investigated the influence that the parameters of a search-based
algorithm have on efficiency and effectiveness.

</div>

<div id="research-methods">

### Research Methods

My surveys of software testing techniques provide a starting
    point for people exploring this field, with
[@Kapfhammer2004] [{{< iconify fa6-solid book-open >}}](/research/papers/kapfhammer2004/index.qmd)
and
[@Kapfhammer2010] [{{< iconify fa6-solid book-open >}}](/research/papers/kapfhammer2010/index.qmd)
being examples of such
articles. Papers like
[@Kapfhammer2016] [{{< iconify fa6-solid book-open >}}](/research/papers/kapfhammer2016/index.qmd)
and
[@McMinn2016] [{{< iconify fa6-solid book-open >}}](/research/papers/mcminn2016/index.qmd)
show how I have articulated a research agenda for the field
of software engineering that stresses, for instance, the need for well-tested
statistical methods. I have also written papers, like
[@Alsharif2018a] [{{< iconify fa6-solid book-open >}}](/research/papers/alsharif2018a/index.qmd)
and
[@Alsharif2018b] [{{< iconify fa6-solid book-open >}}](/research/papers/alsharif2018b/index.qmd),
that explain
how to replicate my research.

</div>

::: {.callout-note appearance="simple"}

## Establish Connections

Do you work on these topics and are you interested in collaborating with me on a
project in the fields of software engineering and software testing? If so, then
please [contact](/contact/) me soon!

:::
