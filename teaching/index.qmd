---
title: "Teaching"
echo: true
jupyter: python3
section-divs: true
keep-md: false
toc: true
toc-depth: 4
page-layout: full
title-block-style: default
title-block-banner: false
---

```{python}
from rich.console import Console
console = Console()
console.print(
    ":rocket: I teach in fields like data structures and software engineering!"
)
```

## Overview

Learners can access the content from my recent courses through web-based
platforms such as [Algorithmology](https://www.algorithmology.org), [Developer
Development](https://developerdevelopment.com/), [OS
Sketch](https://www.os-sketch.com/), and [Proactive
Programmers](https://proactiveprogrammers.com/). By clicking on the following
links you can learn more about algorithm analysis, data structures, discrete
mathematics, operating systems, and software engineering! Each course platform
features a syllabus and course schedule, links to assignments, technical
content, and a dedicated [Discord](https://discord.com/) server. All of my prior
course materials are available by [contacting me](/contact/) with your request.

## Recent Courses

- [Algorithm Analysis](https://www.algorithmology.org): Implement and evaluate
correct and efficient algorithms

- [Computer Security](https://www.securitysynapse.org/): Explore computer security
principles and practices

- [Data
Abstraction](https://www.proactiveprogrammers.com/data-abstraction/introduction-data-abstraction/):
Build and manipulate correct and efficient data structures

- [Discrete
Structures](https://www.proactiveprogrammers.com/discrete-structures/introduction-discrete-structures/):
Clearly connect mathematics to Python programming

- [Document Engineering](https://prosegrammers.com/): Use Python to analyze and
create documentation

- [Operating Systems](https://www.os-sketch.com/): Build and understand
operating system components

- [Software Engineering](https://www.developerdevelopment.com/): Team-based
introduction to building software systems

- [Theoretical Machines](https://proofgrammers.com/): Applied introduction to
the theory of computation
